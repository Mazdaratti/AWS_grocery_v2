name: Terraform & Docker Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:  # Required for OIDC authentication
      id-token: write  # Required for OIDC authentication
      contents: read   # Required to checkout the repository

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          #aws-access-key-id: ${{ secrets.aws_access_key_id }}
          #aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          #aws-session-token: ${{ secrets.aws_session_token }}
          role-to-assume: ${{ secrets.arn_github_role }} # Required for OIDC
          aws-region: ${{ secrets.TF_VAR_aws_region }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Initialize Terraform
        run: terraform init
        working-directory: ./infrastructure

      - name: Set Terraform Variables
        run: |
          echo "TF_VAR_allowed_ssh_ip=${{ secrets.TF_VAR_allowed_ssh_ip }}" >> $GITHUB_ENV
          echo "TF_VAR_key_name=${{ secrets.TF_VAR_ssh_key_name }}" >> $GITHUB_ENV
          echo "TF_VAR_db_user=${{ secrets.TF_VAR_db_user }}" >> $GITHUB_ENV
          echo "TF_VAR_db_password=${{ secrets.TF_VAR_db_password }}" >> $GITHUB_ENV
          echo "TF_VAR_db_name=${{ secrets.TF_VAR_db_name }}" >> $GITHUB_ENV
          echo "TF_VAR_region=${{ secrets.TF_VAR_region }}" >> $GITHUB_ENV

      # Phase 1: Provision resources needed for .env and ECR
      - name: Apply Terraform (Phase 1)
        run: |
          terraform apply -auto-approve \
            -target=aws_ecr_repository.repos \
            -target=module.vpc \
            -target=module.security_groups \
            -target=module.rds \
            -target=module.s3_bucket \
            -target=module.iam_ec2 \
            -target=module.iam_lambda \
            || exit 1
        working-directory: ./infrastructure

      - name: Retrieve Terraform Outputs (Phase 1)
        run: |
          echo "POSTGRES_HOST=$(terraform output -raw rds_host)" >> $GITHUB_ENV
          echo "ECR_REPOSITORY_URL=$(terraform output -raw ecr_repository_url)" >> $GITHUB_ENV
          echo "ECR_REGISTRY_URL=$(echo $ECR_REPOSITORY_URL | cut -d'/' -f1)" >> $GITHUB_ENV

      - name: Generate .env File
        run: |
          echo "JWT_SECRET_KEY=${{ secrets.jwt_secret_key }}" >> backend/.env
          echo "POSTGRES_USER=${{ secrets.TF_VAR_db_user }}" >> backend/.env
          echo "POSTGRES_PASSWORD=${{ secrets.TF_VAR_db_password }}" >> backend/.env
          echo "POSTGRES_DB=${{ secrets.TF_VAR_db_name }}" >> backend/.env
          echo "POSTGRES_HOST=${{ env.POSTGRES_HOST }}" >> backend/.env
          echo "POSTGRES_URI=postgresql://${{ secrets.TF_VAR_db_user }}:${{ secrets.TF_VAR_db_password }}@${{ env.POSTGRES_HOST }}:5432/${{ secrets.TF_VAR_db_name }}" >> backend/.env
          echo "S3_BUCKET_NAME=${{ secrets.TF_VAR_bucket_name }}" >> backend/.env
          echo "S3_REGION=${{ secrets.TF_VAR_region }}" >> backend/.env
          echo "USE_S3_STORAGE=true" >> backend/.env

      - name: Build Docker Image
        run: |
          cd backend
          docker build -t my-ecr-repo:latest . || exit 1

      - name: Tag and Push Docker Image to ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.TF_VAR_region }} | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY_URL }}
          docker tag my-ecr-repo:latest ${{ env.ECR_REPOSITORY_URL }}:latest
          docker push ${{ env.ECR_REPOSITORY_URL }}:latest || exit 1

      - name: Delete .env to Prevent Exposure
        run: rm -f backend/.env

      - name: Clean Up Docker Images
        run: |
          docker rmi my-ecr-repo:latest ${{ env.ECR_REPOSITORY_URL }}:latest || true

      # Phase 2: Provision the rest of the infrastructure
      - name: Apply Terraform (Phase 2)
        run: |
          terraform apply -auto-approve || exit 1
        working-directory: ./infrastructure 