name: Terraform & Docker Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions: # Required for OIDC authentication
      id-token: write  # Required for OIDC authentication
      contents: read   # Required to checkout the repository

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          #aws-access-key-id: ${{ secrets.aws_access_key_id }}
          #aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          #aws-session-token: ${{ secrets.aws_session_token }}
          role-to-assume: ${{ secrets.arn_github_actions_role }} # Required for OIDC
          role-session-name: GitHubActionsSession
          aws-region: ${{ secrets.TF_VAR_region }}


      - name: Generate backend.tf Dynamically
        run: |
          cat <<EOF > infrastructure/backend.tf
          terraform {
            backend "s3" {
              bucket         = "${{ secrets.TF_STATE_BACKEND_BUCKET_NAME }}"
              key            = "terraform_state/statefile.tfstate"
              region         = "${{ secrets.TF_VAR_region }}"
              encrypt        = true
              dynamodb_table = "${{ secrets.TF_STATE_LOCK_TABLE }}"
            }
          }
          EOF

          echo "Generated infrastructure/backend.tf"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: List files for debugging
        run: ls -R infrastructure

      - name: Initialize Terraform with Dynamic Backend
        run: terraform init
        working-directory: infrastructure

      - name: Validate Terraform Configuration
        run: terraform validate
        working-directory: infrastructure

      - name: Set Terraform Variables
        run: |
          echo "TF_VAR_allowed_ssh_ip=${{ secrets.TF_VAR_allowed_ssh_ip }}" >> $GITHUB_ENV
          echo "TF_VAR_key_name=${{ secrets.TF_VAR_ssh_key_name }}" >> $GITHUB_ENV
          echo "TF_VAR_db_user=${{ secrets.TF_VAR_db_user }}" >> $GITHUB_ENV
          echo "TF_VAR_db_password=${{ secrets.TF_VAR_db_password }}" >> $GITHUB_ENV
          echo "TF_VAR_db_name=${{ secrets.TF_VAR_db_name }}" >> $GITHUB_ENV
          echo "TF_VAR_region=${{ secrets.TF_VAR_region }}" >> $GITHUB_ENV
          echo "TF_VAR_bucket_name=${{ secrets.bucket_name }}" >> $GITHUB_ENV

      - name: Apply Terraform
        run: |
          terraform plan || exit 1
        working-directory: infrastructure
