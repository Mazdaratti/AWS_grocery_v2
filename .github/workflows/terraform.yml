name: Terraform & Docker Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Retrieve Terraform Outputs
        run: |
          echo "POSTGRES_HOST=grocery-db.cheoasek0kzu.eu-central-1.rds.amazonaws.com" >> $GITHUB_ENV
          echo "ECR_REPOSITORY_URL=225989349529.dkr.ecr.eu-central-1.amazonaws.com/aws_grocery-app" >> $GITHUB_ENV
          echo "ECR_REGISTRY_URL=$(echo $ECR_REPOSITORY_URL | cut -d'/' -f1)" >> $GITHUB_ENV

      - name: Generate .env File
        run: |
          echo "JWT_SECRET_KEY=${{ secrets.jwt_secret_key }}" >> backend/.env
          echo "POSTGRES_USER=${{ secrets.TF_VAR_db_user }}" >> backend/.env
          echo "POSTGRES_PASSWORD=${{ secrets.TF_VAR_db_password }}" >> backend/.env
          echo "POSTGRES_DB=${{ secrets.TF_VAR_db_name }}" >> backend/.env
          echo "POSTGRES_HOST=${{ env.POSTGRES_HOST }}" >> backend/.env
          echo "POSTGRES_URI=postgresql://${{ secrets.TF_VAR_db_user }}:${{ secrets.TF_VAR_db_password }}@${{ env.POSTGRES_HOST }}:5432/${{ secrets.TF_VAR_db_name }}" >> backend/.env
          echo "S3_BUCKET_NAME=${{ secrets.TF_VAR_bucket_name }}" >> backend/.env
          echo "S3_REGION=${{ secrets.TF_VAR_region }}" >> backend/.env
          echo "USE_S3_STORAGE=true" >> backend/.env

      - name: Build Docker Image
        run: |
          cd backend
          docker build -t my-ecr-repo:latest . || exit 1

      - name: Tag and Push Docker Image to ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.TF_VAR_region }} | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY_URL }}
          docker tag my-ecr-repo:latest ${{ env.ECR_REPOSITORY_URL }}:latest
          docker push ${{ env.ECR_REPOSITORY_URL }}:latest

      - name: Delete .env to Prevent Exposure
        run: rm -f .env  # Ensures itâ€™s gone from GitHub runner

      - name: Clean Up Docker Images
        run: |
          docker rmi my-ecr-repo:latest ${{ env.ECR_REPOSITORY_URL }}:latest || true